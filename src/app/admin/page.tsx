'use client';

import { useState, useEffect } from 'react';
import { firestore } from '../../lib/firebase';
import { collection, onSnapshot, query, orderBy, limit } from 'firebase/firestore';
import StatsCard from '../components/StatsCard';
import QuickActionButton from '../components/QuickActionButton';
import StatusBadge from '../components/StatusBadge';

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–ª—è –∑–∞–ø–∏—Å–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
interface Activity {
  id: string;
  user: string;
  action: string;
  timestamp: any; // Firestore Timestamp
  status: 'success' | 'info' | 'warning' | 'danger';
}

export default function AdminPage() {
  const [activities, setActivities] = useState<Activity[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const q = query(collection(firestore, 'activity_log'), orderBy('timestamp', 'desc'), limit(5));
    
    const unsubscribe = onSnapshot(q, (querySnapshot) => {
      const activitiesData: Activity[] = [];
      querySnapshot.forEach((doc) => {
        activitiesData.push({ id: doc.id, ...doc.data() } as Activity);
      });
      setActivities(activitiesData);
      setLoading(false);
    }, (error) => {
      console.error("Error fetching activities: ", error);
      setLoading(false);
    });

    // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => unsubscribe();
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
  const formatTime = (timestamp: any) => {
    if (!timestamp) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
    const date = timestamp.toDate();
    const now = new Date();
    const diffSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);
    
    if (diffSeconds < 60) return `${diffSeconds} —Å–µ–∫ –Ω–∞–∑–∞–¥`;
    const diffMinutes = Math.floor(diffSeconds / 60);
    if (diffMinutes < 60) return `${diffMinutes} –º–∏–Ω –Ω–∞–∑–∞–¥`;
    const diffHours = Math.floor(diffMinutes / 60);
    if (diffHours < 24) return `${diffHours} —á –Ω–∞–∑–∞–¥`;
    return date.toLocaleDateString();
  };

  // –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç. –∫–∞—Ä—Ç–æ—á–µ–∫ (–ø–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—á–Ω—ã–º–∏)
  const stats = [
    { title: '–í—Å–µ–≥–æ –≤–æ–¥–∏—Ç–µ–ª–µ–π', value: '24', change: '+2', trend: 'up' as const, icon: 'üë•', color: 'blue' as const },
    { title: '–ê–∫—Ç–∏–≤–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤', value: '18', change: '+5', trend: 'up' as const, icon: 'üöõ', color: 'green' as const },
    { title: '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ä–µ–π—Å–æ–≤', value: '156', change: '+12', trend: 'up' as const, icon: '‚úÖ', color: 'purple' as const },
    { title: '–°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å', value: '65 –∫–º/—á', change: '-3', trend: 'down' as const, icon: '‚ö°', color: 'yellow' as const },
  ];

  const ActivitySkeleton = () => (
    <div className="space-y-4">
      {[...Array(4)].map((_, i) => (
        <div key={i} className="flex items-center gap-4 p-3 rounded-lg bg-slate-50 animate-pulse">
          <div className="w-3 h-3 rounded-full bg-slate-200"></div>
          <div className="flex-1 space-y-2">
            <div className="w-1/4 h-4 bg-slate-200 rounded"></div>
            <div className="w-1/2 h-4 bg-slate-200 rounded"></div>
          </div>
          <div className="w-1/6 h-4 bg-slate-200 rounded"></div>
        </div>
      ))}
    </div>
  );

  return (
    <div className="space-y-8">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold text-slate-900">–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h1>
          <p className="text-slate-600 mt-2">–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –∞–≤—Ç–æ–ø–∞—Ä–∫–æ–º, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏</p>
        </div>
        <button className="btn-primary flex items-center gap-2">
          <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
          </svg>
          –î–æ–±–∞–≤–∏—Ç—å –≤–æ–¥–∏—Ç–µ–ª—è
        </button>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {stats.map((stat, index) => <StatsCard key={index} {...stat} />)}
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
        {/* –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
        <div className="lg:col-span-2">
          <div className="card p-6">
            <div className="flex items-center justify-between mb-6">
              <h2 className="text-xl font-semibold text-slate-900">–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h2>
              <button className="text-sm text-blue-600 hover:text-blue-700 font-medium">–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ</button>
            </div>
            {loading ? (
              <ActivitySkeleton />
            ) : activities.length > 0 ? (
              <div className="space-y-4">
                {activities.map((activity) => (
                  <div key={activity.id} className="flex items-center gap-4 p-3 rounded-lg hover:bg-slate-50 transition-colors">
                    <StatusBadge 
                      status=""
                      variant={activity.status}
                      size="sm"
                      showDot={true}
                    />
                    <div className="flex-1">
                      <p className="text-sm font-medium text-slate-900">{activity.user}</p>
                      <p className="text-sm text-slate-600">{activity.action}</p>
                    </div>
                    <span className="text-xs text-slate-500">{formatTime(activity.timestamp)}</span>
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-center py-8">
                <p className="text-slate-500">–ü–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.</p>
              </div>
            )}
          </div>
        </div>

        {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
        <div className="space-y-6">
          <div className="card p-6">
            <h2 className="text-xl font-semibold text-slate-900 mb-4">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
            <div className="space-y-3">
              <QuickActionButton icon="üë§" title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏" description="–î–æ–±–∞–≤–∏—Ç—å, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" color="blue" />
              <QuickActionButton icon="üöõ" title="–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç" description="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ" color="green" />
              <QuickActionButton icon="üìä" title="–°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç" description="–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç –ø–æ —Ä–∞–±–æ—Ç–µ –∞–≤—Ç–æ–ø–∞—Ä–∫–∞" color="purple" />
              <QuickActionButton icon="‚öôÔ∏è" title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã" description="–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∏—Å—Ç–µ–º—ã" color="yellow" />
            </div>
          </div>

          <div className="card p-6">
            <h2 className="text-xl font-semibold text-slate-900 mb-4">–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            <div className="space-y-3 text-sm">
                <div className="flex justify-between"><span className="text-slate-600">–í–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã:</span><span className="font-medium">v2.1.0</span></div>
                <div className="flex justify-between"><span className="text-slate-600">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</span><span className="font-medium">15.01.2025</span></div>
                <div className="flex justify-between"><span className="text-slate-600">–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞:</span><span className="text-green-600 font-medium">–û–Ω–ª–∞–π–Ω</span></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
